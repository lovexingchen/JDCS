C51 COMPILER V9.56.0.0   BH1750                                                            05/28/2018 11:06:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BH1750
OBJECT MODULE PLACED IN .\Objects\BH1750.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE BH1750\BH1750.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\BH1750.lst) TABS(2) OBJECT(.\Objects\BH1750.obj)

line level    source

   1          #include ".\BH1750\BH1750.h"
   2          
   3          #define   SlaveAddress   0x46 //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改
   4                                        //ALT  ADDRESS引脚接地时地址为0x46，接电源时地址为0xB8
   5          
   6          uchar    BUF[8];                         //接收数据缓存区       
   7          int      dis_data=0;                     //变量
   8          float    temp=0.0;
   9          sbit     SCL=P1^2;                       //IIC时钟引脚定义
  10          sbit     SDA=P1^4;                       //IIC数据引脚定义
  11          sbit     ADDR=P1^3;                      //IIC数据引脚定义
  12          
  13          /**************************************
  14          起始信号
  15          **************************************/
  16          void BH1750_Start()
  17          {
  18   1          SDA = 1;                    //拉高数据线
  19   1          SCL = 1;                    //拉高时钟线
  20   1          Delay1us(5);                 //延时
  21   1          SDA = 0;                    //产生下降沿
  22   1          Delay1us(5);                 //延时
  23   1          SCL = 0;                    //拉低时钟线
  24   1      }
  25          
  26          /**************************************
  27          停止信号
  28          **************************************/
  29          void BH1750_Stop()
  30          {
  31   1          SDA = 0;                    //拉低数据线
  32   1          SCL = 1;                    //拉高时钟线
  33   1          Delay1us(5);                 //延时
  34   1          SDA = 1;                    //产生上升沿
  35   1          Delay1us(5);                 //延时
  36   1      }
  37          
  38          /**************************************
  39          发送应答信号
  40          入口参数:ack (0:ACK 1:NAK)
  41          **************************************/
  42          void BH1750_SendACK(bit ack)
  43          {
  44   1          SDA = ack;                  //写应答信号
  45   1          SCL = 1;                    //拉高时钟线
  46   1          Delay1us(5);                 //延时
  47   1          SCL = 0;                    //拉低时钟线
  48   1          Delay1us(5);                 //延时
  49   1      }
  50          
  51          /**************************************
  52          接收应答信号
  53          **************************************/
  54          bit BH1750_RecvACK()
C51 COMPILER V9.56.0.0   BH1750                                                            05/28/2018 11:06:50 PAGE 2   

  55          {
  56   1          SCL = 1;                    //拉高时钟线
  57   1          Delay1us(5);                 //延时
  58   1          CY = SDA;                   //读应答信号
  59   1          SCL = 0;                    //拉低时钟线
  60   1          Delay1us(5);                 //延时
  61   1      
  62   1          return CY;
  63   1      }
  64          
  65          /**************************************
  66          向IIC总线发送一个字节数据
  67          **************************************/
  68          void BH1750_SendByte(uchar dat)
  69          {
  70   1          uchar i;
  71   1      
  72   1          for (i=0; i<8; i++)         //8位计数器
  73   1          {
  74   2              dat <<= 1;              //移出数据的最高位
  75   2              SDA = CY;               //送数据口
  76   2              SCL = 1;                //拉高时钟线
  77   2              Delay1us(5);             //延时
  78   2              SCL = 0;                //拉低时钟线
  79   2              Delay1us(5);             //延时
  80   2          }
  81   1          BH1750_RecvACK();
  82   1      }
  83          
  84          /**************************************
  85          从IIC总线接收一个字节数据
  86          **************************************/
  87          uchar BH1750_RecvByte()
  88          {
  89   1          uchar i;
  90   1          uchar dat = 0;
  91   1      
  92   1          SDA = 1;                    //使能内部上拉,准备读取数据,
  93   1          for (i=0; i<8; i++)         //8位计数器
  94   1          {
  95   2              dat <<= 1;
  96   2              SCL = 1;                //拉高时钟线
  97   2              Delay1us(5);             //延时
  98   2              dat |= SDA;             //读数据               
  99   2              SCL = 0;                //拉低时钟线
 100   2              Delay1us(5);             //延时
 101   2          }
 102   1          return dat;
 103   1      }
 104          
 105          //*********************************
 106          
 107          void Single_Write_BH1750(uchar REG_Address)
 108          {
 109   1          BH1750_Start();                  //起始信号
 110   1          BH1750_SendByte(SlaveAddress);   //发送设备地址+写信号
 111   1          BH1750_SendByte(REG_Address);    //内部寄存器地址，
 112   1        //  BH1750_SendByte(REG_data);       //内部寄存器数据，
 113   1          BH1750_Stop();                   //发送停止信号
 114   1      }
 115          
 116          //********单字节读取*****************************************
C51 COMPILER V9.56.0.0   BH1750                                                            05/28/2018 11:06:50 PAGE 3   

 117          /*
 118          uchar Single_Read_BH1750(uchar REG_Address)
 119          {  uchar REG_data;
 120              BH1750_Start();                          //起始信号
 121              BH1750_SendByte(SlaveAddress);           //发送设备地址+写信号
 122              BH1750_SendByte(REG_Address);                   //发送存储单元地址，从0开始 
 123              BH1750_Start();                          //起始信号
 124              BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 125              REG_data=BH1750_RecvByte();              //读出寄存器数据
 126            BH1750_SendACK(1);   
 127            BH1750_Stop();                           //停止信号
 128              return REG_data; 
 129          }
 130          */
 131          //*********************************************************
 132          //
 133          //连续读出BH1750内部数据
 134          //
 135          //*********************************************************
 136          void Multiple_read_BH1750(void)
 137          {   uchar i;  
 138   1          BH1750_Start();                          //起始信号
 139   1          BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 140   1        
 141   1         for (i=0; i<3; i++)                      //连续读取2个地址数据，存储中BUF
 142   1          {
 143   2              BUF[i] = BH1750_RecvByte();          //BUF[0]存储0x32地址中的数据
 144   2              if (i == 3)
 145   2              {
 146   3      
 147   3                 BH1750_SendACK(1);                //最后一个数据需要回NOACK
 148   3              }
 149   2              else
 150   2              {   
 151   3                BH1750_SendACK(0);                //回应ACK
 152   3             }
 153   2         }
 154   1      
 155   1          BH1750_Stop();                          //停止信号
 156   1          Delay1ms(5);
 157   1      }
 158          
 159          
 160          //初始化BH1750，根据需要请参考pdf进行修改****
 161          void Init_BH1750()
 162          {
 163   1         P1M1 &= 0XE3;
 164   1         P0M0 &= 0XE3;
 165   1         ADDR = 0;
 166   1         Single_Write_BH1750(0x01);  
 167   1      }
 168          
 169          
 170          
 171          
 172          
 173          
 174          
 175          
 176          
 177          
 178          
C51 COMPILER V9.56.0.0   BH1750                                                            05/28/2018 11:06:50 PAGE 4   

 179          
 180          
 181          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    239    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
